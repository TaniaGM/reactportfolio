{"version":3,"sources":["components/Jumbotron/Jumbotron.js","components/Navbar/Navbar.js","components/Cards/Cards.js","components/Projects/Projects.js","components/About/About.js","components/Footer/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["JumbotronContainer","state","info","props","personalInfo","Jumbotron","className","this","name","id","location","href","github","target","rel","linkedIn","Component","NavbarContainer","Navbar","Header","Brand","Text","pullRight","Link","Card","clicked","flippedCard","projectLine","filp","flip","bind","setState","prevState","console","log","flippedFront","flippedBack","onClick","e","src","screenshot","alt","heading","description","technologies","map","t","i","key","reduce","prev","curr","link","ProjectContainer","projects","aria-hidden","Grid","Row","Col","s","md","lg","toString","AboutContainer","about","Footer","App","ResumeDetails","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c9e8adaf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport './Jumbotron.css';\nclass JumbotronContainer extends Component {\n\n    state = {\n        info: this.props.personalInfo || []\n    };\n    render() {\n        return (\n            <Jumbotron>\n                <h1 className=\"text-center \">{this.props.personalInfo.name}</h1>\n                <p className=\"text-center\" id=\"location\">{this.props.personalInfo.location}</p>\n                <p className=\"text-center\">\n                    {/*Place this tag where you want the button to render.*/}\n                    <a href={this.props.personalInfo.github} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-github fa-3x\"></i></a>\n                    <a href={this.props.personalInfo.linkedIn} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fa fa-linkedin fa-3x\"></i>\n                    </a>\n                </p>\n            </Jumbotron>\n        )\n    }\n}\n\nexport default JumbotronContainer;","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport \"./Navbar.css\";\nclass NavbarContainer extends Component {\n    render() {\n        return (\n            <Navbar className=\"top-navbar\">\n                <Navbar.Header>\n                    <Navbar.Brand>\n                    </Navbar.Brand>\n                </Navbar.Header>\n                <Navbar.Text pullRight>\n                    <Navbar.Link href=\"#profile-link\">Profile</Navbar.Link>\n                    <Navbar.Link href=\"#contact-link\">Contact</Navbar.Link>\n                    <Navbar.Link href=\"#projects-link\">Projects</Navbar.Link>\n                </Navbar.Text>\n            </Navbar>\n        );\n    }\n}\nexport default NavbarContainer;","import React, { Component } from \"react\";\nimport \"./Cards.css\";\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicked: false,\n            flippedCard: false,\n            projectLine: this.props.projectLine || []\n        };\n        this.filp = this\n            .flip\n            .bind(this);\n    }\n    flip() {\n        this.setState(prevState => ({\n            clicked: !prevState.clicked,\n            flippedCard: !prevState.flippedCard\n        }));\n        console.log(this.state);\n    };\n    render() {\n        let projectLine = this.state.projectLine;\n        let flippedFront = this.state.flippedCard\n            ? \"card-back\"\n            : \"card-front\";\n        let flippedBack = this.state.flippedCard\n            ? \"card-front\"\n            : \"card-back\";\n        return (\n            <div>\n                <div\n                    className=\"card project-card border-primary mb-3\"\n                    onClick={(e) => this.flip(e)}>\n                    <div className=\"card-header project-card-header\">\n                        <img\n                            className=\"card-img-top\"\n                            src={projectLine.screenshot}\n                            alt={projectLine.heading} />\n                    </div>\n                    <div className={\"card-body project-card-body \" + flippedFront}>\n                        <h4 className=\"project-heading\">{projectLine.heading}</h4>\n                        <p className=\"card-text project-card-description\">{projectLine.description}</p>\n                    </div>\n                    <div className={\"card-body project-card-body \" + flippedBack}>\n                        <h4 className=\"project-heading\">Technologies</h4>\n                        {projectLine.technologies\n                            .map((t, i) => <span className=\"project-card-description\" key={i}>{t}</span>)\n                            .reduce((prev, curr) => [prev, ', ', curr])}\n                    </div>\n                    <div className=\"card-footer project-card-footer text-center\">\n                        <a href={projectLine.link} className=\"btn btn-outline-success\" target=\"_blank\" rel=\"noopener noreferrer\">Link to Webpage</a>\n                    </div>\n                    <div className=\"card-footer project-card-footer text-center\">\n                        <a href={projectLine.link} className=\"btn btn-outline-success\" target=\"_blank\" rel=\"noopener noreferrer\">Github respository</a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport { Grid, Row, Col } from 'react-bootstrap';\nimport Card from \"../Cards\";\nimport \"./Projects.css\";\n\nclass ProjectContainer extends Component {\n    state = {\n        projects: this.props.projects || []\n    };\n    render() {\n        return (\n            <div className=\"card border-primary mb-3\" id=\"projects-link\">\n                <div className=\"card-header\">\n                    <h3>Projects\n                        <i className=\"fa fa-code\" aria-hidden=\"true\"></i>\n                    </h3>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"card-block\">\n                        <div className=\"container\">\n                            <Grid>\n                                <Row>\n                                    {this\n                                        .state\n                                        .projects\n                                        .map(projectLine => (\n                                            <Col\n                                                s={12}\n                                                md={6}\n                                                lg={4}\n                                                key={projectLine\n                                                    .heading\n                                                    .toString()}>\n                                                <Card projectLine={projectLine} />\n                                            </Col>\n                                        ))}\n                                </Row>\n                            </Grid>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProjectContainer;","import React, { Component } from 'react';\nimport './About.css';\n\nclass AboutContainer extends Component {\n    state = {\n        info: this.props.personalInfo || []\n    };\n    render() {\n        return (\n            <div className=\"card border-primary mb-3 profile-card\" id=\"profile-link\">\n                <div className=\"card-header\">\n                    <h3>Profile\n                        <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\n                    </h3>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"card-block\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-4\">\n                                \n                                <img\n                                    className=\"img-50%\"\n                                    src=\"https://user-images.githubusercontent.com/56511238/82262813-3890a800-9927-11ea-8b84-ddf55e92d101.png\"\n                                    alt=\"Tania Moore\"/>\n                                <p className=\"card-text\">{this.props.personalInfo.about}</p>\n                            </div>\n\n                            <div className=\"col-lg-8\">\n                                <ul>\n                                    <li className=\"about-self\">My name is Tania. I am a junior developer in training at the University of New Hampshire Coding Bootcamp. Prior to learning coding, I had a fulfilling career in the non-profit sector, with a focus on Indigenous health.</li>\n                                    <li className=\"about-self\">When I am not coding or sleeping and dreaming of coding, I spend my time planning our next vacation, spending time with my husband, family and two cats.</li>\n                                    <li className=\"about-self\">I look forward to pursuing the challenges presented in web development. Ideally, after finding a career, I look forward to working with Indigenous communities in developing their on-line footprint that allows them to communicate seamlessly with their members.</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AboutContainer;","import React, { Component } from \"react\";\nimport \"./Footer.css\";\nclass Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                Developed using React\n            </div>\n\n        )\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Grid, Row } from 'react-bootstrap';\nimport './App.css';\nimport JumbotronContainer from './components/Jumbotron';\nimport NavbarContainer from './components/Navbar';\nimport ProjectContainer from './components/Projects';\nimport ResumeDetails from './Resume.json';\nimport AboutContainer from './components/About';\nimport Footer from \"./components/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <NavbarContainer />\n        <JumbotronContainer personalInfo={ResumeDetails.personalInfo} />\n        <Grid>\n          <Row className=\"about-row\">\n            <AboutContainer personalInfo={ResumeDetails.personalInfo} />\n          </Row>\n          <Row className=\"project-row\">\n            <ProjectContainer projects={ResumeDetails.projects} />\n          </Row>\n    \n        </Grid>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (!isLocalhost) {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            } else {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}